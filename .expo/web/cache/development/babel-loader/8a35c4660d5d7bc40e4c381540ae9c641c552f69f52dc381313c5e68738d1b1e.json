{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  isLoggedIn: false,\n  token: null,\n  username: null,\n  serverUrl: null,\n  loading: false,\n  error: null\n};\nexport var authSlice = createSlice({\n  name: 'auth',\n  initialState: initialState,\n  reducers: {\n    loginStart: function loginStart(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: function loginSuccess(state, action) {\n      state.isLoggedIn = true;\n      state.token = action.payload.token;\n      state.username = action.payload.username;\n      state.serverUrl = action.payload.serverUrl;\n      state.loading = false;\n      state.error = null;\n    },\n    loginFailure: function loginFailure(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    logout: function logout(state) {\n      return initialState;\n    }\n  }\n});\nvar _authSlice$actions = authSlice.actions,\n  loginStart = _authSlice$actions.loginStart,\n  loginSuccess = _authSlice$actions.loginSuccess,\n  loginFailure = _authSlice$actions.loginFailure,\n  logout = _authSlice$actions.logout;\nexport { loginStart, loginSuccess, loginFailure, logout };\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isLoggedIn","token","username","serverUrl","loading","error","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logout","_authSlice$actions","actions","reducer"],"sources":["/var/www/html/odoo-react-native/src/state/slices/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface AuthState {\n  isLoggedIn: boolean;\n  token: string | null;\n  username: string | null;\n  serverUrl: string | null;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: AuthState = {\n  isLoggedIn: false,\n  token: null,\n  username: null,\n  serverUrl: null,\n  loading: false,\n  error: null,\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action: PayloadAction<{ token: string; username: string; serverUrl: string }>) => {\n      state.isLoggedIn = true;\n      state.token = action.payload.token;\n      state.username = action.payload.username;\n      state.serverUrl = action.payload.serverUrl;\n      state.loading = false;\n      state.error = null;\n    },\n    loginFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    logout: (state) => {\n      return initialState;\n    },\n  },\n});\n\nexport const { loginStart, loginSuccess, loginFailure, logout } = authSlice.actions;\n\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAW7D,IAAMC,YAAuB,GAAG;EAC9BC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE,IAAI;EACfC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,IAAMC,SAAS,GAAGR,WAAW,CAAC;EACnCS,IAAI,EAAE,MAAM;EACZR,YAAY,EAAZA,YAAY;EACZS,QAAQ,EAAE;IACRC,UAAU,EAAE,SAAZA,UAAUA,CAAGC,KAAK,EAAK;MACrBA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,YAAY,EAAE,SAAdA,YAAYA,CAAGD,KAAK,EAAEE,MAA6E,EAAK;MACtGF,KAAK,CAACV,UAAU,GAAG,IAAI;MACvBU,KAAK,CAACT,KAAK,GAAGW,MAAM,CAACC,OAAO,CAACZ,KAAK;MAClCS,KAAK,CAACR,QAAQ,GAAGU,MAAM,CAACC,OAAO,CAACX,QAAQ;MACxCQ,KAAK,CAACP,SAAS,GAAGS,MAAM,CAACC,OAAO,CAACV,SAAS;MAC1CO,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDS,YAAY,EAAE,SAAdA,YAAYA,CAAGJ,KAAK,EAAEE,MAA6B,EAAK;MACtDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,MAAM,EAAE,SAARA,MAAMA,CAAGL,KAAK,EAAK;MACjB,OAAOX,YAAY;IACrB;EACF;AACF,CAAC,CAAC;AAEK,IAAAiB,kBAAA,GAA2DV,SAAS,CAACW,OAAO;EAApER,UAAU,GAAAO,kBAAA,CAAVP,UAAU;EAAEE,YAAY,GAAAK,kBAAA,CAAZL,YAAY;EAAEG,YAAY,GAAAE,kBAAA,CAAZF,YAAY;EAAEC,MAAM,GAAAC,kBAAA,CAAND,MAAM;AAAuB,SAAAN,UAAA,EAAAE,YAAA,EAAAG,YAAA,EAAAC,MAAA;AAEpF,eAAeT,SAAS,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}