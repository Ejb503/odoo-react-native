{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, Card, DataTable } from 'react-native-paper';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MCPResponseRenderer = function MCPResponseRenderer(_ref) {\n  var response = _ref.response;\n  if (!response) {\n    return null;\n  }\n  return _jsx(ScrollView, {\n    style: styles.container,\n    children: _jsx(Card, {\n      style: styles.card,\n      children: renderContent(response)\n    })\n  });\n};\nvar renderContent = function renderContent(response) {\n  switch (response.type) {\n    case 'text':\n      return _jsx(Card.Content, {\n        children: _jsx(Text, {\n          style: styles.textResponse,\n          children: response.content\n        })\n      });\n    case 'image':\n      return _jsx(Card.Content, {\n        children: _jsx(Card.Cover, {\n          source: {\n            uri: response.content\n          },\n          style: styles.image\n        })\n      });\n    case 'list':\n      return _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.listTitle,\n          children: response.content.title\n        }), response.content.items.map(function (item, index) {\n          return _jsxs(View, {\n            style: styles.listItem,\n            children: [_jsx(Text, {\n              style: styles.listItemDot,\n              children: \"\\u2022\"\n            }), _jsx(Text, {\n              style: styles.listItemText,\n              children: item\n            })]\n          }, index);\n        })]\n      });\n    case 'table':\n      return _jsx(Card.Content, {\n        children: _jsxs(DataTable, {\n          children: [_jsx(DataTable.Header, {\n            children: response.content.headers.map(function (header, index) {\n              return _jsx(DataTable.Title, {\n                children: header\n              }, index);\n            })\n          }), response.content.rows.map(function (row, rowIndex) {\n            return _jsx(DataTable.Row, {\n              children: row.map(function (cell, cellIndex) {\n                return _jsx(DataTable.Cell, {\n                  children: cell\n                }, cellIndex);\n              })\n            }, rowIndex);\n          })]\n        })\n      });\n    case 'error':\n      return _jsx(Card.Content, {\n        children: _jsx(Text, {\n          style: styles.errorText,\n          children: response.content\n        })\n      });\n    default:\n      return _jsx(Card.Content, {\n        children: _jsx(Text, {\n          children: \"Unknown response type\"\n        })\n      });\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginVertical: 10,\n    width: '100%'\n  },\n  card: {\n    marginBottom: 10\n  },\n  textResponse: {\n    fontSize: 16\n  },\n  image: {\n    margin: 8\n  },\n  listTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  listItem: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: 6\n  },\n  listItemDot: {\n    fontSize: 18,\n    marginRight: 6\n  },\n  listItemText: {\n    fontSize: 16,\n    flex: 1\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 16\n  }\n});\nexport default MCPResponseRenderer;","map":{"version":3,"names":["React","View","StyleSheet","ScrollView","Text","Card","DataTable","jsx","_jsx","jsxs","_jsxs","MCPResponseRenderer","_ref","response","style","styles","container","children","card","renderContent","type","Content","textResponse","content","Cover","source","uri","image","listTitle","title","items","map","item","index","listItem","listItemDot","listItemText","Header","headers","header","Title","rows","row","rowIndex","Row","cell","cellIndex","Cell","errorText","create","marginVertical","width","marginBottom","fontSize","margin","fontWeight","flexDirection","alignItems","marginRight","flex","color"],"sources":["/var/www/html/odoo-react-native/src/components/MCPResponseRenderer.tsx"],"sourcesContent":["import React from 'react';\nimport { View, StyleSheet, ScrollView } from 'react-native';\nimport { Text, Card, DataTable } from 'react-native-paper';\nimport { MCPResponse } from '../api/mcpService';\n\ninterface MCPResponseRendererProps {\n  response: MCPResponse | null;\n}\n\nconst MCPResponseRenderer: React.FC<MCPResponseRendererProps> = ({ response }) => {\n  if (!response) {\n    return null;\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      <Card style={styles.card}>\n        {renderContent(response)}\n      </Card>\n    </ScrollView>\n  );\n};\n\nconst renderContent = (response: MCPResponse) => {\n  switch (response.type) {\n    case 'text':\n      return (\n        <Card.Content>\n          <Text style={styles.textResponse}>{response.content}</Text>\n        </Card.Content>\n      );\n    \n    case 'image':\n      return (\n        <Card.Content>\n          <Card.Cover source={{ uri: response.content }} style={styles.image} />\n        </Card.Content>\n      );\n    \n    case 'list':\n      return (\n        <Card.Content>\n          <Text style={styles.listTitle}>{response.content.title}</Text>\n          {response.content.items.map((item: string, index: number) => (\n            <View key={index} style={styles.listItem}>\n              <Text style={styles.listItemDot}>â€¢</Text>\n              <Text style={styles.listItemText}>{item}</Text>\n            </View>\n          ))}\n        </Card.Content>\n      );\n    \n    case 'table':\n      return (\n        <Card.Content>\n          <DataTable>\n            <DataTable.Header>\n              {response.content.headers.map((header: string, index: number) => (\n                <DataTable.Title key={index}>{header}</DataTable.Title>\n              ))}\n            </DataTable.Header>\n\n            {response.content.rows.map((row: string[], rowIndex: number) => (\n              <DataTable.Row key={rowIndex}>\n                {row.map((cell, cellIndex) => (\n                  <DataTable.Cell key={cellIndex}>{cell}</DataTable.Cell>\n                ))}\n              </DataTable.Row>\n            ))}\n          </DataTable>\n        </Card.Content>\n      );\n    \n    case 'error':\n      return (\n        <Card.Content>\n          <Text style={styles.errorText}>{response.content}</Text>\n        </Card.Content>\n      );\n    \n    default:\n      return (\n        <Card.Content>\n          <Text>Unknown response type</Text>\n        </Card.Content>\n      );\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 10,\n    width: '100%',\n  },\n  card: {\n    marginBottom: 10,\n  },\n  textResponse: {\n    fontSize: 16,\n  },\n  image: {\n    margin: 8,\n  },\n  listTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  listItem: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: 6,\n  },\n  listItemDot: {\n    fontSize: 18,\n    marginRight: 6,\n  },\n  listItemText: {\n    fontSize: 16,\n    flex: 1,\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 16,\n  },\n});\n\nexport default MCPResponseRenderer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}