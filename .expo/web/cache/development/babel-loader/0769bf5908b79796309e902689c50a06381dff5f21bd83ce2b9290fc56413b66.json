{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, ActivityIndicator } from 'react-native-paper';\nimport Voice from '@react-native-voice/voice';\nimport { colors } from \"../utils/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar VoiceInput = function VoiceInput(_ref) {\n  var onSpeechResult = _ref.onSpeechResult,\n    isProcessing = _ref.isProcessing;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isListening = _useState2[0],\n    setIsListening = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    speechError = _useState4[0],\n    setSpeechError = _useState4[1];\n  useEffect(function () {\n    var setupVoice = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        Voice.onSpeechStart = function () {\n          return setIsListening(true);\n        };\n        Voice.onSpeechEnd = function () {\n          return setIsListening(false);\n        };\n        Voice.onSpeechResults = onSpeechResults;\n        Voice.onSpeechError = onSpeechError;\n        try {\n          yield Voice.isAvailable();\n        } catch (e) {\n          console.error('Voice recognition not available', e);\n        }\n      });\n      return function setupVoice() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    setupVoice();\n    return function () {\n      Voice.destroy().then(Voice.removeAllListeners);\n    };\n  }, []);\n  var onSpeechResults = function onSpeechResults(e) {\n    if (e.value && e.value.length > 0) {\n      var recognizedText = e.value[0];\n      onSpeechResult(recognizedText);\n    }\n  };\n  var onSpeechError = function onSpeechError(e) {\n    var _e$error;\n    setSpeechError(((_e$error = e.error) == null ? void 0 : _e$error.message) || 'Unknown speech recognition error');\n    setIsListening(false);\n  };\n  var startListening = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setSpeechError(null);\n      try {\n        yield Voice.start('en-US');\n      } catch (e) {\n        console.error('Error starting voice recognition', e);\n        setSpeechError('Failed to start voice recognition');\n      }\n    });\n    return function startListening() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var stopListening = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        yield Voice.stop();\n      } catch (e) {\n        console.error('Error stopping voice recognition', e);\n      }\n    });\n    return function stopListening() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var toggleListening = function toggleListening() {\n    if (isListening) {\n      stopListening();\n    } else {\n      startListening();\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [speechError && _jsx(Text, {\n      style: styles.errorText,\n      children: speechError\n    }), _jsx(TouchableOpacity, {\n      style: [styles.voiceButton, isListening && styles.listening, isProcessing && styles.processing],\n      onPress: toggleListening,\n      disabled: isProcessing,\n      children: isProcessing ? _jsx(ActivityIndicator, {\n        color: \"#fff\",\n        size: 30\n      }) : _jsxs(View, {\n        style: styles.microphoneIcon,\n        children: [_jsx(View, {\n          style: styles.micTop\n        }), _jsx(View, {\n          style: styles.micBody\n        }), _jsx(View, {\n          style: styles.micBottom\n        })]\n      })\n    }), _jsx(Text, {\n      style: styles.statusText,\n      children: isProcessing ? 'Processing...' : isListening ? 'Listening...' : 'Tap to speak'\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 20\n  },\n  voiceButton: {\n    width: 70,\n    height: 70,\n    borderRadius: 35,\n    backgroundColor: colors.primary,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 3\n  },\n  listening: {\n    backgroundColor: colors.accent,\n    transform: [{\n      scale: 1.1\n    }]\n  },\n  processing: {\n    backgroundColor: colors.info\n  },\n  microphoneIcon: {\n    width: 20,\n    height: 30,\n    alignItems: 'center'\n  },\n  micTop: {\n    width: 18,\n    height: 18,\n    borderRadius: 9,\n    backgroundColor: '#fff'\n  },\n  micBody: {\n    width: 6,\n    height: 15,\n    backgroundColor: '#fff'\n  },\n  micBottom: {\n    width: 18,\n    height: 6,\n    borderRadius: 3,\n    backgroundColor: '#fff'\n  },\n  statusText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: colors.text\n  },\n  errorText: {\n    color: colors.error,\n    marginBottom: 10,\n    textAlign: 'center',\n    paddingHorizontal: 30\n  }\n});\nexport default VoiceInput;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","TouchableOpacity","Text","ActivityIndicator","Voice","colors","jsx","_jsx","jsxs","_jsxs","VoiceInput","_ref","onSpeechResult","isProcessing","_useState","_useState2","_slicedToArray","isListening","setIsListening","_useState3","_useState4","speechError","setSpeechError","setupVoice","_ref2","_asyncToGenerator","onSpeechStart","onSpeechEnd","onSpeechResults","onSpeechError","isAvailable","e","console","error","apply","arguments","destroy","then","removeAllListeners","value","length","recognizedText","_e$error","message","startListening","_ref3","start","stopListening","_ref4","stop","toggleListening","style","styles","container","children","errorText","voiceButton","listening","processing","onPress","disabled","color","size","microphoneIcon","micTop","micBody","micBottom","statusText","create","alignItems","justifyContent","marginVertical","width","height","borderRadius","backgroundColor","primary","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","accent","transform","scale","info","marginTop","fontSize","text","marginBottom","textAlign","paddingHorizontal"],"sources":["/var/www/html/odoo-react-native/src/components/VoiceInput.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, TouchableOpacity, Platform } from 'react-native';\nimport { Text, ActivityIndicator } from 'react-native-paper';\nimport Voice, { SpeechResultsEvent, SpeechErrorEvent } from '@react-native-voice/voice';\nimport { colors } from '../utils/theme';\n\ninterface VoiceInputProps {\n  onSpeechResult: (text: string) => void;\n  isProcessing: boolean;\n}\n\nconst VoiceInput: React.FC<VoiceInputProps> = ({ onSpeechResult, isProcessing }) => {\n  const [isListening, setIsListening] = useState(false);\n  const [speechError, setSpeechError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Initialize voice recognition\n    const setupVoice = async () => {\n      Voice.onSpeechStart = () => setIsListening(true);\n      Voice.onSpeechEnd = () => setIsListening(false);\n      Voice.onSpeechResults = onSpeechResults;\n      Voice.onSpeechError = onSpeechError;\n      \n      try {\n        await Voice.isAvailable();\n      } catch (e) {\n        console.error('Voice recognition not available', e);\n      }\n    };\n\n    setupVoice();\n\n    // Cleanup\n    return () => {\n      Voice.destroy().then(Voice.removeAllListeners);\n    };\n  }, []);\n\n  const onSpeechResults = (e: SpeechResultsEvent) => {\n    if (e.value && e.value.length > 0) {\n      const recognizedText = e.value[0];\n      onSpeechResult(recognizedText);\n    }\n  };\n\n  const onSpeechError = (e: SpeechErrorEvent) => {\n    setSpeechError(e.error?.message || 'Unknown speech recognition error');\n    setIsListening(false);\n  };\n\n  const startListening = async () => {\n    setSpeechError(null);\n    \n    try {\n      await Voice.start('en-US');\n    } catch (e) {\n      console.error('Error starting voice recognition', e);\n      setSpeechError('Failed to start voice recognition');\n    }\n  };\n\n  const stopListening = async () => {\n    try {\n      await Voice.stop();\n    } catch (e) {\n      console.error('Error stopping voice recognition', e);\n    }\n  };\n\n  const toggleListening = () => {\n    if (isListening) {\n      stopListening();\n    } else {\n      startListening();\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {speechError && (\n        <Text style={styles.errorText}>{speechError}</Text>\n      )}\n      \n      <TouchableOpacity\n        style={[\n          styles.voiceButton,\n          isListening && styles.listening,\n          isProcessing && styles.processing\n        ]}\n        onPress={toggleListening}\n        disabled={isProcessing}\n      >\n        {isProcessing ? (\n          <ActivityIndicator color=\"#fff\" size={30} />\n        ) : (\n          <View style={styles.microphoneIcon}>\n            <View style={styles.micTop} />\n            <View style={styles.micBody} />\n            <View style={styles.micBottom} />\n          </View>\n        )}\n      </TouchableOpacity>\n      \n      <Text style={styles.statusText}>\n        {isProcessing ? 'Processing...' : isListening ? 'Listening...' : 'Tap to speak'}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 20,\n  },\n  voiceButton: {\n    width: 70,\n    height: 70,\n    borderRadius: 35,\n    backgroundColor: colors.primary,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.3,\n    shadowRadius: 3,\n  },\n  listening: {\n    backgroundColor: colors.accent,\n    transform: [{ scale: 1.1 }],\n  },\n  processing: {\n    backgroundColor: colors.info,\n  },\n  microphoneIcon: {\n    width: 20,\n    height: 30,\n    alignItems: 'center',\n  },\n  micTop: {\n    width: 18,\n    height: 18,\n    borderRadius: 9,\n    backgroundColor: '#fff',\n  },\n  micBody: {\n    width: 6,\n    height: 15,\n    backgroundColor: '#fff',\n  },\n  micBottom: {\n    width: 18,\n    height: 6,\n    borderRadius: 3,\n    backgroundColor: '#fff',\n  },\n  statusText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: colors.text,\n  },\n  errorText: {\n    color: colors.error,\n    marginBottom: 10,\n    textAlign: 'center',\n    paddingHorizontal: 30,\n  },\n});\n\nexport default VoiceInput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAEnD,SAASC,IAAI,EAAEC,iBAAiB,QAAQ,oBAAoB;AAC5D,OAAOC,KAAK,MAAgD,2BAA2B;AACvF,SAASC,MAAM;AAAyB,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAOxC,IAAMC,UAAqC,GAAG,SAAxCA,UAAqCA,CAAAC,IAAA,EAAyC;EAAA,IAAnCC,cAAc,GAAAD,IAAA,CAAdC,cAAc;IAAEC,YAAY,GAAAF,IAAA,CAAZE,YAAY;EAC3E,IAAAC,SAAA,GAAsCjB,QAAQ,CAAC,KAAK,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAAI,UAAA,GAAsCtB,QAAQ,CAAgB,IAAI,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA5DE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElCtB,SAAS,CAAC,YAAM;IAEd,IAAMyB,UAAU;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAC7BrB,KAAK,CAACsB,aAAa,GAAG;UAAA,OAAMR,cAAc,CAAC,IAAI,CAAC;QAAA;QAChDd,KAAK,CAACuB,WAAW,GAAG;UAAA,OAAMT,cAAc,CAAC,KAAK,CAAC;QAAA;QAC/Cd,KAAK,CAACwB,eAAe,GAAGA,eAAe;QACvCxB,KAAK,CAACyB,aAAa,GAAGA,aAAa;QAEnC,IAAI;UACF,MAAMzB,KAAK,CAAC0B,WAAW,CAAC,CAAC;QAC3B,CAAC,CAAC,OAAOC,CAAC,EAAE;UACVC,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEF,CAAC,CAAC;QACrD;MACF,CAAC;MAAA,gBAXKR,UAAUA,CAAA;QAAA,OAAAC,KAAA,CAAAU,KAAA,OAAAC,SAAA;MAAA;IAAA,GAWf;IAEDZ,UAAU,CAAC,CAAC;IAGZ,OAAO,YAAM;MACXnB,KAAK,CAACgC,OAAO,CAAC,CAAC,CAACC,IAAI,CAACjC,KAAK,CAACkC,kBAAkB,CAAC;IAChD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMV,eAAe,GAAG,SAAlBA,eAAeA,CAAIG,CAAqB,EAAK;IACjD,IAAIA,CAAC,CAACQ,KAAK,IAAIR,CAAC,CAACQ,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACjC,IAAMC,cAAc,GAAGV,CAAC,CAACQ,KAAK,CAAC,CAAC,CAAC;MACjC3B,cAAc,CAAC6B,cAAc,CAAC;IAChC;EACF,CAAC;EAED,IAAMZ,aAAa,GAAG,SAAhBA,aAAaA,CAAIE,CAAmB,EAAK;IAAA,IAAAW,QAAA;IAC7CpB,cAAc,CAAC,EAAAoB,QAAA,GAAAX,CAAC,CAACE,KAAK,qBAAPS,QAAA,CAASC,OAAO,KAAI,kCAAkC,CAAC;IACtEzB,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,IAAM0B,cAAc;IAAA,IAAAC,KAAA,GAAApB,iBAAA,CAAG,aAAY;MACjCH,cAAc,CAAC,IAAI,CAAC;MAEpB,IAAI;QACF,MAAMlB,KAAK,CAAC0C,KAAK,CAAC,OAAO,CAAC;MAC5B,CAAC,CAAC,OAAOf,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEF,CAAC,CAAC;QACpDT,cAAc,CAAC,mCAAmC,CAAC;MACrD;IACF,CAAC;IAAA,gBATKsB,cAAcA,CAAA;MAAA,OAAAC,KAAA,CAAAX,KAAA,OAAAC,SAAA;IAAA;EAAA,GASnB;EAED,IAAMY,aAAa;IAAA,IAAAC,KAAA,GAAAvB,iBAAA,CAAG,aAAY;MAChC,IAAI;QACF,MAAMrB,KAAK,CAAC6C,IAAI,CAAC,CAAC;MACpB,CAAC,CAAC,OAAOlB,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEF,CAAC,CAAC;MACtD;IACF,CAAC;IAAA,gBANKgB,aAAaA,CAAA;MAAA,OAAAC,KAAA,CAAAd,KAAA,OAAAC,SAAA;IAAA;EAAA,GAMlB;EAED,IAAMe,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5B,IAAIjC,WAAW,EAAE;MACf8B,aAAa,CAAC,CAAC;IACjB,CAAC,MAAM;MACLH,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;EAED,OACEnC,KAAA,CAACV,IAAI;IAACoD,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC3BjC,WAAW,IACVd,IAAA,CAACL,IAAI;MAACiD,KAAK,EAAEC,MAAM,CAACG,SAAU;MAAAD,QAAA,EAAEjC;IAAW,CAAO,CACnD,EAEDd,IAAA,CAACN,gBAAgB;MACfkD,KAAK,EAAE,CACLC,MAAM,CAACI,WAAW,EAClBvC,WAAW,IAAImC,MAAM,CAACK,SAAS,EAC/B5C,YAAY,IAAIuC,MAAM,CAACM,UAAU,CACjC;MACFC,OAAO,EAAET,eAAgB;MACzBU,QAAQ,EAAE/C,YAAa;MAAAyC,QAAA,EAEtBzC,YAAY,GACXN,IAAA,CAACJ,iBAAiB;QAAC0D,KAAK,EAAC,MAAM;QAACC,IAAI,EAAE;MAAG,CAAE,CAAC,GAE5CrD,KAAA,CAACV,IAAI;QAACoD,KAAK,EAAEC,MAAM,CAACW,cAAe;QAAAT,QAAA,GACjC/C,IAAA,CAACR,IAAI;UAACoD,KAAK,EAAEC,MAAM,CAACY;QAAO,CAAE,CAAC,EAC9BzD,IAAA,CAACR,IAAI;UAACoD,KAAK,EAAEC,MAAM,CAACa;QAAQ,CAAE,CAAC,EAC/B1D,IAAA,CAACR,IAAI;UAACoD,KAAK,EAAEC,MAAM,CAACc;QAAU,CAAE,CAAC;MAAA,CAC7B;IACP,CACe,CAAC,EAEnB3D,IAAA,CAACL,IAAI;MAACiD,KAAK,EAAEC,MAAM,CAACe,UAAW;MAAAb,QAAA,EAC5BzC,YAAY,GAAG,eAAe,GAAGI,WAAW,GAAG,cAAc,GAAG;IAAc,CAC3E,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMmC,MAAM,GAAGpD,UAAU,CAACoE,MAAM,CAAC;EAC/Bf,SAAS,EAAE;IACTgB,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,cAAc,EAAE;EAClB,CAAC;EACDf,WAAW,EAAE;IACXgB,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAEtE,MAAM,CAACuE,OAAO;IAC/BP,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBO,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEP,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACrCO,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDxB,SAAS,EAAE;IACTkB,eAAe,EAAEtE,MAAM,CAAC6E,MAAM;IAC9BC,SAAS,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAI,CAAC;EAC5B,CAAC;EACD1B,UAAU,EAAE;IACViB,eAAe,EAAEtE,MAAM,CAACgF;EAC1B,CAAC;EACDtB,cAAc,EAAE;IACdS,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVJ,UAAU,EAAE;EACd,CAAC;EACDL,MAAM,EAAE;IACNQ,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,CAAC;IACfC,eAAe,EAAE;EACnB,CAAC;EACDV,OAAO,EAAE;IACPO,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,EAAE;IACVE,eAAe,EAAE;EACnB,CAAC;EACDT,SAAS,EAAE;IACTM,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,CAAC;IACTC,YAAY,EAAE,CAAC;IACfC,eAAe,EAAE;EACnB,CAAC;EACDR,UAAU,EAAE;IACVmB,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZ1B,KAAK,EAAExD,MAAM,CAACmF;EAChB,CAAC;EACDjC,SAAS,EAAE;IACTM,KAAK,EAAExD,MAAM,CAAC4B,KAAK;IACnBwD,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,QAAQ;IACnBC,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAEF,eAAejF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}