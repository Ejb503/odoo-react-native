{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport var authService = {\n  login: function () {\n    var _login = _asyncToGenerator(function* (username, password, serverUrl) {\n      yield new Promise(function (resolve) {\n        return setTimeout(resolve, 1000);\n      });\n      var token = `mock-jwt-token-${Math.random().toString(36).substring(2, 15)}`;\n      yield AsyncStorage.setItem('auth_token', token);\n      yield AsyncStorage.setItem('username', username);\n      yield AsyncStorage.setItem('server_url', serverUrl);\n      return {\n        token: token\n      };\n    });\n    function login(_x, _x2, _x3) {\n      return _login.apply(this, arguments);\n    }\n    return login;\n  }(),\n  logout: function () {\n    var _logout = _asyncToGenerator(function* () {\n      yield AsyncStorage.removeItem('auth_token');\n      yield AsyncStorage.removeItem('username');\n      yield AsyncStorage.removeItem('server_url');\n    });\n    function logout() {\n      return _logout.apply(this, arguments);\n    }\n    return logout;\n  }(),\n  checkAuthStatus: function () {\n    var _checkAuthStatus = _asyncToGenerator(function* () {\n      var token = yield AsyncStorage.getItem('auth_token');\n      var username = yield AsyncStorage.getItem('username');\n      var serverUrl = yield AsyncStorage.getItem('server_url');\n      if (token && username && serverUrl) {\n        return {\n          isLoggedIn: true,\n          token: token,\n          username: username,\n          serverUrl: serverUrl\n        };\n      }\n      return {\n        isLoggedIn: false\n      };\n    });\n    function checkAuthStatus() {\n      return _checkAuthStatus.apply(this, arguments);\n    }\n    return checkAuthStatus;\n  }()\n};","map":{"version":3,"names":["AsyncStorage","authService","login","_login","_asyncToGenerator","username","password","serverUrl","Promise","resolve","setTimeout","token","Math","random","toString","substring","setItem","_x","_x2","_x3","apply","arguments","logout","_logout","removeItem","checkAuthStatus","_checkAuthStatus","getItem","isLoggedIn"],"sources":["/var/www/html/odoo-react-native/src/api/authService.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\n\n// This would be replaced with actual API calls to the Odoo Proxy server\nexport const authService = {\n  login: async (username: string, password: string, serverUrl: string): Promise<{ token: string }> => {\n    // Simulate API call delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // For demo purposes, always succeed with a mock token\n    const token = `mock-jwt-token-${Math.random().toString(36).substring(2, 15)}`;\n    \n    // Store auth info in AsyncStorage\n    await AsyncStorage.setItem('auth_token', token);\n    await AsyncStorage.setItem('username', username);\n    await AsyncStorage.setItem('server_url', serverUrl);\n    \n    return { token };\n  },\n  \n  logout: async (): Promise<void> => {\n    // Clear stored auth info\n    await AsyncStorage.removeItem('auth_token');\n    await AsyncStorage.removeItem('username');\n    await AsyncStorage.removeItem('server_url');\n  },\n  \n  checkAuthStatus: async (): Promise<{ isLoggedIn: boolean, token?: string, username?: string, serverUrl?: string }> => {\n    const token = await AsyncStorage.getItem('auth_token');\n    const username = await AsyncStorage.getItem('username');\n    const serverUrl = await AsyncStorage.getItem('server_url');\n    \n    if (token && username && serverUrl) {\n      return { isLoggedIn: true, token, username, serverUrl };\n    }\n    \n    return { isLoggedIn: false };\n  }\n};"],"mappings":";AAAA,OAAOA,YAAY,MAAM,2CAA2C;AAGpE,OAAO,IAAMC,WAAW,GAAG;EACzBC,KAAK;IAAA,IAAAC,MAAA,GAAAC,iBAAA,CAAE,WAAOC,QAAgB,EAAEC,QAAgB,EAAEC,SAAiB,EAAiC;MAElG,MAAM,IAAIC,OAAO,CAAC,UAAAC,OAAO;QAAA,OAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC;MAAA,EAAC;MAGvD,IAAME,KAAK,GAAG,kBAAkBC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MAG7E,MAAMf,YAAY,CAACgB,OAAO,CAAC,YAAY,EAAEL,KAAK,CAAC;MAC/C,MAAMX,YAAY,CAACgB,OAAO,CAAC,UAAU,EAAEX,QAAQ,CAAC;MAChD,MAAML,YAAY,CAACgB,OAAO,CAAC,YAAY,EAAET,SAAS,CAAC;MAEnD,OAAO;QAAEI,KAAK,EAALA;MAAM,CAAC;IAClB,CAAC;IAAA,SAbDT,KAAKA,CAAAe,EAAA,EAAAC,GAAA,EAAAC,GAAA;MAAA,OAAAhB,MAAA,CAAAiB,KAAA,OAAAC,SAAA;IAAA;IAAA,OAALnB,KAAK;EAAA,GAaJ;EAEDoB,MAAM;IAAA,IAAAC,OAAA,GAAAnB,iBAAA,CAAE,aAA2B;MAEjC,MAAMJ,YAAY,CAACwB,UAAU,CAAC,YAAY,CAAC;MAC3C,MAAMxB,YAAY,CAACwB,UAAU,CAAC,UAAU,CAAC;MACzC,MAAMxB,YAAY,CAACwB,UAAU,CAAC,YAAY,CAAC;IAC7C,CAAC;IAAA,SALDF,MAAMA,CAAA;MAAA,OAAAC,OAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAANC,MAAM;EAAA,GAKL;EAEDG,eAAe;IAAA,IAAAC,gBAAA,GAAAtB,iBAAA,CAAE,aAAqG;MACpH,IAAMO,KAAK,SAASX,YAAY,CAAC2B,OAAO,CAAC,YAAY,CAAC;MACtD,IAAMtB,QAAQ,SAASL,YAAY,CAAC2B,OAAO,CAAC,UAAU,CAAC;MACvD,IAAMpB,SAAS,SAASP,YAAY,CAAC2B,OAAO,CAAC,YAAY,CAAC;MAE1D,IAAIhB,KAAK,IAAIN,QAAQ,IAAIE,SAAS,EAAE;QAClC,OAAO;UAAEqB,UAAU,EAAE,IAAI;UAAEjB,KAAK,EAALA,KAAK;UAAEN,QAAQ,EAARA,QAAQ;UAAEE,SAAS,EAATA;QAAU,CAAC;MACzD;MAEA,OAAO;QAAEqB,UAAU,EAAE;MAAM,CAAC;IAC9B,CAAC;IAAA,SAVDH,eAAeA,CAAA;MAAA,OAAAC,gBAAA,CAAAN,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAfI,eAAe;EAAA;AAWjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}