{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TextInput, Button, Text, Surface, ActivityIndicator } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { useAppDispatch, useAppSelector } from \"../hooks/useAppDispatch\";\nimport { loginStart, loginSuccess, loginFailure } from \"../state/slices/authSlice\";\nimport { authService } from \"../api/authService\";\nimport { colors } from \"../utils/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var navigation = useNavigation();\n  var dispatch = useAppDispatch();\n  var _useAppSelector = useAppSelector(function (state) {\n      return state.auth;\n    }),\n    loading = _useAppSelector.loading,\n    error = _useAppSelector.error;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    serverUrl = _useState6[0],\n    setServerUrl = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showPassword = _useState8[0],\n    setShowPassword = _useState8[1];\n  useEffect(function () {\n    if (error) {\n      Alert.alert('Login Error', error);\n    }\n  }, [error]);\n  var handleLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!username.trim()) {\n        Alert.alert('Input Error', 'Username is required');\n        return;\n      }\n      if (!password.trim()) {\n        Alert.alert('Input Error', 'Password is required');\n        return;\n      }\n      if (!serverUrl.trim()) {\n        Alert.alert('Input Error', 'Server URL is required');\n        return;\n      }\n      try {\n        dispatch(loginStart());\n        var _yield$authService$lo = yield authService.login(username, password, serverUrl),\n          token = _yield$authService$lo.token;\n        dispatch(loginSuccess({\n          token: token,\n          username: username,\n          serverUrl: serverUrl\n        }));\n        navigation.navigate('Main');\n      } catch (err) {\n        dispatch(loginFailure(err instanceof Error ? err.message : 'Login failed'));\n      }\n    });\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: _jsxs(Surface, {\n        style: styles.surface,\n        children: [_jsxs(View, {\n          style: styles.logoContainer,\n          children: [_jsx(Text, {\n            style: styles.logoText,\n            children: \"Odoo\"\n          }), _jsx(Text, {\n            style: styles.logoSubtext,\n            children: \"Voice Assistant\"\n          })]\n        }), _jsxs(View, {\n          style: styles.formContainer,\n          children: [_jsx(TextInput, {\n            mode: \"outlined\",\n            label: \"Username\",\n            value: username,\n            onChangeText: setUsername,\n            autoCapitalize: \"none\",\n            style: styles.input,\n            disabled: loading\n          }), _jsx(TextInput, {\n            mode: \"outlined\",\n            label: \"Password\",\n            value: password,\n            onChangeText: setPassword,\n            secureTextEntry: !showPassword,\n            right: _jsx(TextInput.Icon, {\n              icon: showPassword ? \"eye-off\" : \"eye\",\n              onPress: function onPress() {\n                return setShowPassword(!showPassword);\n              }\n            }),\n            style: styles.input,\n            disabled: loading\n          }), _jsx(TextInput, {\n            mode: \"outlined\",\n            label: \"Server URL\",\n            value: serverUrl,\n            onChangeText: setServerUrl,\n            autoCapitalize: \"none\",\n            keyboardType: \"url\",\n            placeholder: \"https://example.odoo.com\",\n            style: styles.input,\n            disabled: loading\n          }), _jsx(Button, {\n            mode: \"contained\",\n            onPress: handleLogin,\n            style: styles.button,\n            disabled: loading,\n            children: loading ? _jsx(ActivityIndicator, {\n              color: colors.background\n            }) : 'Login'\n          })]\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    padding: 20\n  },\n  surface: {\n    padding: 30,\n    borderRadius: 10,\n    elevation: 4\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  logoText: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: colors.primary\n  },\n  logoSubtext: {\n    fontSize: 18,\n    color: colors.accent,\n    marginTop: 5\n  },\n  formContainer: {\n    width: '100%'\n  },\n  input: {\n    marginBottom: 16\n  },\n  button: {\n    marginTop: 10,\n    paddingVertical: 6\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","KeyboardAvoidingView","Platform","ScrollView","Alert","TextInput","Button","Text","Surface","ActivityIndicator","useNavigation","useAppDispatch","useAppSelector","loginStart","loginSuccess","loginFailure","authService","colors","jsx","_jsx","jsxs","_jsxs","LoginScreen","navigation","dispatch","_useAppSelector","state","auth","loading","error","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","serverUrl","setServerUrl","_useState7","_useState8","showPassword","setShowPassword","alert","handleLogin","_ref","_asyncToGenerator","trim","_yield$authService$lo","login","token","navigate","err","Error","message","apply","arguments","behavior","OS","style","styles","container","children","contentContainerStyle","scrollContainer","surface","logoContainer","logoText","logoSubtext","formContainer","mode","label","value","onChangeText","autoCapitalize","input","disabled","secureTextEntry","right","Icon","icon","onPress","keyboardType","placeholder","button","color","background","create","flex","backgroundColor","flexGrow","justifyContent","padding","borderRadius","elevation","alignItems","marginBottom","fontSize","fontWeight","primary","accent","marginTop","width","paddingVertical"],"sources":["/var/www/html/odoo-react-native/src/screens/LoginScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Image, KeyboardAvoidingView, Platform, ScrollView, Alert } from 'react-native';\nimport { TextInput, Button, Text, Surface, ActivityIndicator } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\n\nimport { RootStackParamList } from '../App';\nimport { useAppDispatch, useAppSelector } from '../hooks/useAppDispatch';\nimport { loginStart, loginSuccess, loginFailure } from '../state/slices/authSlice';\nimport { authService } from '../api/authService';\nimport { colors } from '../utils/theme';\n\ntype LoginScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Login'>;\n\nconst LoginScreen = () => {\n  const navigation = useNavigation<LoginScreenNavigationProp>();\n  const dispatch = useAppDispatch();\n  const { loading, error } = useAppSelector(state => state.auth);\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [serverUrl, setServerUrl] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  useEffect(() => {\n    if (error) {\n      Alert.alert('Login Error', error);\n    }\n  }, [error]);\n\n  const handleLogin = async () => {\n    if (!username.trim()) {\n      Alert.alert('Input Error', 'Username is required');\n      return;\n    }\n    \n    if (!password.trim()) {\n      Alert.alert('Input Error', 'Password is required');\n      return;\n    }\n    \n    if (!serverUrl.trim()) {\n      Alert.alert('Input Error', 'Server URL is required');\n      return;\n    }\n\n    try {\n      dispatch(loginStart());\n      const { token } = await authService.login(username, password, serverUrl);\n      dispatch(loginSuccess({ token, username, serverUrl }));\n      navigation.navigate('Main');\n    } catch (err) {\n      dispatch(loginFailure(err instanceof Error ? err.message : 'Login failed'));\n    }\n  };\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      style={styles.container}\n    >\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <Surface style={styles.surface}>\n          <View style={styles.logoContainer}>\n            <Text style={styles.logoText}>Odoo</Text>\n            <Text style={styles.logoSubtext}>Voice Assistant</Text>\n          </View>\n\n          <View style={styles.formContainer}>\n            <TextInput\n              mode=\"outlined\"\n              label=\"Username\"\n              value={username}\n              onChangeText={setUsername}\n              autoCapitalize=\"none\"\n              style={styles.input}\n              disabled={loading}\n            />\n\n            <TextInput\n              mode=\"outlined\"\n              label=\"Password\"\n              value={password}\n              onChangeText={setPassword}\n              secureTextEntry={!showPassword}\n              right={\n                <TextInput.Icon \n                  icon={showPassword ? \"eye-off\" : \"eye\"} \n                  onPress={() => setShowPassword(!showPassword)}\n                />\n              }\n              style={styles.input}\n              disabled={loading}\n            />\n\n            <TextInput\n              mode=\"outlined\"\n              label=\"Server URL\"\n              value={serverUrl}\n              onChangeText={setServerUrl}\n              autoCapitalize=\"none\"\n              keyboardType=\"url\"\n              placeholder=\"https://example.odoo.com\"\n              style={styles.input}\n              disabled={loading}\n            />\n\n            <Button\n              mode=\"contained\"\n              onPress={handleLogin}\n              style={styles.button}\n              disabled={loading}\n            >\n              {loading ? <ActivityIndicator color={colors.background} /> : 'Login'}\n            </Button>\n          </View>\n        </Surface>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background,\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    padding: 20,\n  },\n  surface: {\n    padding: 30,\n    borderRadius: 10,\n    elevation: 4,\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 30,\n  },\n  logoText: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: colors.primary,\n  },\n  logoSubtext: {\n    fontSize: 18,\n    color: colors.accent,\n    marginTop: 5,\n  },\n  formContainer: {\n    width: '100%',\n  },\n  input: {\n    marginBottom: 16,\n  },\n  button: {\n    marginTop: 10,\n    paddingVertical: 6,\n  },\n});\n\nexport default LoginScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}